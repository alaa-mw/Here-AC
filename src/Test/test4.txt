
// Product List Component
@Component({
  selector: 'app-product-list',
  standalone: true,
  imports: [CommonModule, RouterModule],
  template: `
      <div class="product-list" id ="product-list-section" >
        <h1>Product List</h1>
        <div
        class="product-item"
        id="product-item"
        *ngFor="let product of this.products$ | async"
        >
          <h3>{{ product.name }}</h3>
          <div class="product-content">
            <img [src]="product.image" alt="Product Image" />
            <div class="product-actions">
              <button id="details-btn" (click)="goToDetails(product.id)">Details</button>
              <button id="edit-btn"  (click)="editProduct($event, product.id)">Edit</button>
              <button id="delete-btn"  (click)="deleteProduct($event, product.id)">Delete</button>
            </div>
          </div>
        </div>
      </div>
  `,
  styles: [`
    .product-list {
    flex: 1;
    padding: 12px;
    max-width: 40%;
    }
    .product-item {
    border: 1px solid #ddd;
    padding: 15px;
    margin-bottom: 10px;
    border-radius: 5px;
    transition: background-color 0.3s;
    }
    .product-item:hover {
    background-color: #f5f5f5;
    }
    .product-item img {
    max-width: 100px;
    max-height: 100px;
    display: block;
    margin-top: 10px;
    }

    .product-content {
    display: flex;
    align-items: center;
    gap: 15px;
    margin-top: 10px;
    }

    .product-actions {
    display: flex;
    flex-direction: column;
    gap: 10px;
    margin-left: 300px;
    }

    .product-actions button {
    padding: 10px 20px;
    font-size: 16px;
    cursor: pointer;
    border-radius: 5px;
    border: none;
    transition: background-color 0.3s;
    }

    .product-actions button:first-child {
    background-color: #82bbf5;
    color: white;
    }

    .product-actions button:last-child {
    background-color: #f77777;
    color: white;
    }
  `],
})
export class ProductListComponent {
  products$;

  constructor(private productState: ProductState,private router: Router ) {
    this.products$ = this.productState.products$;
  }

  goToDetails(id: string): void {
  this.router.navigate(['/product', id]);
  }


  deleteProduct(event: Event, id: string): void {
  event.stopPropagation();
  this.productState.deleteProduct(id);
  this.router.navigate(['/']);
  }

  editProduct(event: Event, id: string): void {
    event.stopPropagation();
    this.router.navigate(['/edit', id]);
  }

}